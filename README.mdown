iOS Universal Framework
=======================

An XCode 4 project template to build universal (arm6, arm7, and simulator)
frameworks for iOS.

By Karl Stenerud


Why a Framework?
----------------

Distributing libraries in a developer-friendly manner is tricky. You need to
include not only the library itself, but also any public include files,
resources, scripts etc.

Apple's solution to this problem is frameworks, which are basically folders
that follow a standard structure to include everything required to use a
library. Unfortunately, in disallowing dynamically linked libraries in iOS,
Apple also removed iOS framework creation functionality in XCode.

It is, however, possible to make a **statically linked** framework with the
right magical incantations. This project template provides that magic.


Installing the Template
-----------------------

Just copy **Static iOS Framework.xctemplate** and
**Static iOS Framework Test.xctemplate** to your XCode templates folder
**~/Library/Developer/Xcode/Templates/Framework & Library** (create the folder
if it doesn't exist yet).

Now restart Xcode and you'll see **Static iOS Framework** under
**Framework & Library** when creating a new project.


Creating an iOS Framework Project
---------------------------------

1. Start a new project.

2. For the project type, choose **Static iOS Framework**, which is under
   **Framework & Library**.

3. Optionally choose to include unit tests.

4. Add your classes, resources, etc with your framework as the target.

5. Any header files that need to be available to other projects must be
   declared public. To do so, go to **Build Phases** in your framework
   target, expand **Copy Headers**, then drag any header files you want to
   make public from the **Project** section to the **Public** section.


Building your iOS Framework
---------------------------

1. Select the **Universal_Framework** scheme (any of its targets will do).

2. Build. It will build the framework for arm6, arm7, and simulator, then merge
   them together into a universal framework.

The finished product will be in your project directory under
**build/Release-universal/(your framework).framework**

It builds in this folder because the command line xcodebuild doesn't use the
new derived data folder that XCode 4 uses.


Using an iOS Framework
----------------------

iOS frameworks are basically the same as Mac OS X frameworks, except they are
statically linked.

To add a framework to your project, simply drag it into your project.
When including headers from your framework, remember to use angle bracket
syntax rather than quotes.

For example, with framework "MyFramework":

    #import <MyFramework/MyClass.h>
